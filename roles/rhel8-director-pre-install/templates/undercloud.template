[DEFAULT]

certificate_generation_ca = local
local_subnet = ctlplane-subnet
clean_nodes = false
cleanup = true
container_cli = podman
container_healthcheck_disabled = false
container_images_file = /home/stack/containers-prepare-parameter.yaml
deployment_user = stack

enable_ironic = true
enable_ironic_inspector = true
enable_mistral = true
enable_node_discovery = false
enable_nova = true
enable_novajoin = false
enable_routed_networks = false
enable_swift_encryption = false
enable_telemetry = false
enable_tempest = true
enable_validations = true
enable_zaqar = true
enabled_hardware_types = ipmi,redfish,ovirt-staging

generate_service_certificate = false
heat_native = true
inspection_interface = br-ctlplane
inspection_runbench = false
ipv6_address_mode = dhcpv6-stateless
ipxe_enabled = true
ironic_default_network_interface = flat
ironic_enabled_network_interfaces = flat
local_interface = eth1
local_ip = "{{ private_cidr | ipaddr('net') | ipaddr(13) | ipaddr('host') }}"
local_mtu = 9000
output_dir = /home/stack/builddir
overcloud_domain_name = {{ domain }}
scheduler_max_attempts = 30
service_principal = director/{{ ansible_fqdn }}
subnets = ctlplane-subnet
undercloud_admin_host = "{{ private_cidr | ipaddr('net') | ipaddr(14) | ipaddr('address') }}"
undercloud_debug = true
undercloud_enable_paunch = true
undercloud_enable_selinux = true
undercloud_hostname = {{ ansible_fqdn }}
undercloud_log_file = install-undercloud.log
undercloud_nameservers = {{ dns_servers }}
undercloud_ntp_servers = 10.0.77.54
undercloud_public_host = "{{ private_cidr | ipaddr('net') | ipaddr(12) | ipaddr('address') }}"
undercloud_update_packages = false
upgrade_cleanup = false


[ctlplane-subnet]
cidr =  "{{ private_cidr}}"
dhcp_start = "{{ private_cidr | ipaddr('net') | ipaddr(21) | ipaddr('address') }}"
dhcp_end = "{{ private_cidr | ipaddr('net') | ipaddr(70) | ipaddr('address') }}"
dns_nameservers = "{{ dns_servers }}"
gateway = "{{ private_cidr | ipaddr('net') | ipaddr(1) | ipaddr('address') }}"
inspection_iprange = {{ private_cidr | ipaddr('net') | ipaddr(171) | ipaddr('address') }},{{ private_cidr | ipaddr('net') | ipaddr(188) | ipaddr('address') }}
masquerade = True
host_routes = [{destination: 10.0.0.0/8, nexthop: {{ private_cidr | ipaddr('net') | ipaddr(1) | ipaddr('address') }} }, {destination: 161.26.0.0/16, nexthop: {{ private_cidr | ipaddr('net') | ipaddr(1) | ipaddr('address') }} },{destination: 166.8.0.0/14, nexthop: {{ private_cidr | ipaddr('net') | ipaddr(1) | ipaddr('address') }} } ]
